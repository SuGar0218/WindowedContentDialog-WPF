<Page
    x:Class="SuGarToolkit.WPF.Samples.Dialogs.Views.SamplePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="clr-namespace:SuGarToolkit.WPF.Samples.Dialogs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:SuGarToolkit.WPF.Controls.Dialogs;assembly=SuGarToolkit.WPF.Controls.Dialogs"
    xmlns:local="clr-namespace:SuGarToolkit.WPF.Samples.Dialogs.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    xmlns:vm="clr-namespace:SuGarToolkit.WPF.Samples.Dialogs.ViewModels"
    Title="SamplePage"
    d:DataContext="{d:DesignInstance vm:SampleViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <ScrollViewer>
        <StackPanel Margin="36,28">
            <TextBlock Text="应用程序主题" />

            <ComboBox
                x:Name="ThemeModeComboBox"
                HorizontalAlignment="Left"
                x:FieldModifier="private"
                ItemsSource="{x:Static vm:EnumValues.ThemeModes}"
                SelectionChanged="ComboBox_SelectionChanged" />

            <Expander>
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            x:Name="ShowMessageBoxButton"
                            Grid.Column="0"
                            x:FieldModifier="private"
                            Click="ShowMessageBoxButton_Click"
                            Content="MessageBox"
                            Style="{DynamicResource AccentButtonStyle}" />
                        <TextBlock
                            x:Name="MessageBoxResultBox"
                            VerticalAlignment="Center"
                            x:FieldModifier="private" />
                    </StackPanel>
                </Expander.Header>

                <StackPanel Orientation="Horizontal">
                    <StackPanel MinWidth="300">
                        <TextBlock Text="标题" />
                        <TextBox
                            AcceptsReturn="True"
                            Text="{Binding MessageBoxSettings.Title, Mode=TwoWay}"
                            TextWrapping="Wrap" />
                        <TextBlock Text="内容" />
                        <TextBox
                            AcceptsReturn="True"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            Text="{Binding MessageBoxSettings.Content, Mode=TwoWay}"
                            TextWrapping="Wrap" />
                    </StackPanel>
                    <StackPanel MinWidth="200">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="按扭组合" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.MessageBoxButtons}" SelectedItem="{Binding MessageBoxSettings.Buttons, Mode=TwoWay}" />
                        <TextBlock Text="默认按钮" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.MessageBoxDefaultButtons}" SelectedItem="{Binding MessageBoxSettings.DefaultButton, Mode=TwoWay}" />
                        <TextBlock Text="图标" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.MessageBoxImages}" SelectedItem="{Binding MessageBoxSettings.Image, Mode=TwoWay}" />
                        <TextBlock Text="主题色" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.ThemeModes}" SelectedItem="{Binding MessageBoxSettings.ThemeMode, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel>
                        <CheckBox Content="以此为父窗口" IsChecked="{Binding MessageBoxSettings.IsChild, Mode=TwoWay}" />
                        <CheckBox
                            Content="模态窗口（无父窗口时无效）"
                            IsChecked="{Binding MessageBoxSettings.IsModal, Mode=TwoWay}"
                            IsEnabled="{Binding MessageBoxSettings.IsChild, Mode=OneWay}" />
                        <CheckBox Content="显示在父窗口中间" IsChecked="{Binding MessageBoxSettings.CenterInParent, Mode=TwoWay}" />
                    </StackPanel>
                </StackPanel>
            </Expander>

            <Expander>
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Grid.Column="0"
                            Click="ShowContentDialogButton_Click"
                            Content="WindowedContentDialog"
                            Style="{DynamicResource AccentButtonStyle}">
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Click="ShowContentDialogButton_Click" Header="WindowedContentDialog used in code-behind" />
                                    <MenuItem Click="ShowXamlContentDialogButton_Click" Header="WindowedContentDialog declared in XAML with x:Bind" />
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <TextBlock
                            x:Name="ContentDialogResultBox"
                            VerticalAlignment="Center"
                            x:FieldModifier="private" />
                    </StackPanel>
                </Expander.Header>

                <StackPanel Orientation="Horizontal">
                    <StackPanel MinWidth="300">
                        <TextBlock Text="标题" />
                        <TextBox
                            AcceptsReturn="True"
                            Text="{Binding ContentDialogSettings.Title, Mode=TwoWay}"
                            TextWrapping="Wrap" />
                        <TextBlock Text="内容" />
                        <TextBox
                            AcceptsReturn="True"
                            Text="{Binding ContentDialogSettings.Message, Mode=TwoWay}"
                            TextWrapping="Wrap" />
                        <TextBlock Text="PrimaryButtonText" />
                        <TextBox Text="{Binding ContentDialogSettings.PrimaryButtonText, Mode=TwoWay}" />
                        <TextBlock Text="SecondaryButtonText" />
                        <TextBox Text="{Binding ContentDialogSettings.SecondaryButtonText, Mode=TwoWay}" />
                        <TextBlock Text="CloseButtonText" />
                        <TextBox Text="{Binding ContentDialogSettings.CloseButtonText, Mode=TwoWay}" />
                        <TextBlock Text="默认按钮" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.ContentDialogButtons}" SelectedItem="{Binding ContentDialogSettings.DefaultButton, Mode=TwoWay}" />
                        <TextBlock Text="主题色" />
                        <ComboBox ItemsSource="{x:Static vm:EnumValues.ThemeModes}" SelectedItem="{Binding ContentDialogSettings.ThemeMode, Mode=TwoWay}" />
                    </StackPanel>
                    <!--<StackPanel MinWidth="200">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                            </Style>
                        </StackPanel.Resources>
                    </StackPanel>-->
                    <StackPanel>
                        <CheckBox Content="IsrimaryButtonEnabled" IsChecked="{Binding ContentDialogSettings.IsPrimaryButtonEnabled, Mode=TwoWay}" />
                        <CheckBox Content="IsecondaryButtonEnabled" IsChecked="{Binding ContentDialogSettings.IsSecondaryButtonEnabled, Mode=TwoWay}" />
                        <CheckBox Content="点击 PrimaryButton 后不关闭" IsChecked="{Binding ContentDialogSettings.PrimaryButtonNotClose, Mode=TwoWay}" />
                        <CheckBox Content="点击 SecondaryButton 后不关闭" IsChecked="{Binding ContentDialogSettings.SecondaryButtonNotClose, Mode=TwoWay}" />
                        <CheckBox Content="以此为父窗口" IsChecked="{Binding ContentDialogSettings.IsChild, Mode=TwoWay}" />
                        <CheckBox Content="显示在父窗口中间" IsChecked="{Binding ContentDialogSettings.CenterInParent, Mode=TwoWay}" />
                        <CheckBox
                            Content="模态窗口（无父窗口时无效）"
                            IsChecked="{Binding ContentDialogSettings.IsModal, Mode=TwoWay}"
                            IsEnabled="{Binding ContentDialogSettings.IsChild, Mode=OneWay}" />
                    </StackPanel>

                    <dialogs:WindowedContentDialog
                        x:Name="XamlWindowedContentDialog"
                        Title="{Binding ContentDialogSettings.Title, Mode=OneWay}"
                        CloseButtonText="{Binding ContentDialogSettings.CloseButtonText, Mode=OneWay}"
                        DefaultButton="{Binding ContentDialogSettings.DefaultButton, Mode=OneWay}"
                        IsModal="{Binding ContentDialogSettings.IsModal, Mode=OneWay}"
                        IsPrimaryButtonEnabled="{Binding ContentDialogSettings.IsPrimaryButtonEnabled, Mode=OneWay}"
                        IsSecondaryButtonEnabled="{Binding ContentDialogSettings.IsSecondaryButtonEnabled, Mode=OneWay}"
                        OwnerWindow="{x:Static app:MainWindow.Current}"
                        PrimaryButtonText="{Binding ContentDialogSettings.PrimaryButtonText, Mode=OneWay}"
                        SecondaryButtonText="{Binding ContentDialogSettings.SecondaryButtonText, Mode=OneWay}">

                        <dialogs:WindowedContentDialog.TitleTemplate>
                            <DataTemplate DataType="{x:Type system:String}">
                                <dialogs:MessageBoxHeader Icon="Information" Text="{Binding}" />
                            </DataTemplate>
                        </dialogs:WindowedContentDialog.TitleTemplate>

                        <StackPanel>
                            <CheckBox Content="Lorem" IsThreeState="True" />
                            <CheckBox Content="Ipsum" IsThreeState="True" />
                            <CheckBox Content="Dolor" IsThreeState="True" />
                            <CheckBox Content="Sit" IsThreeState="True" />
                            <CheckBox Content="Amet" IsThreeState="True" />
                        </StackPanel>
                    </dialogs:WindowedContentDialog>
                </StackPanel>
            </Expander>

            <Expander>
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Click="ShowContentDialogWindowButton_Click"
                            Content="ContentDialogWindow"
                            Style="{DynamicResource AccentButtonStyle}" />
                    </StackPanel>
                </Expander.Header>
            </Expander>
        </StackPanel>
    </ScrollViewer>
</Page>
